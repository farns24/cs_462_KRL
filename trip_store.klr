ruleset trip_store {
  meta {
    name "Trip Store"
    author "Michael Farnsworth"
    description <<storetrips>>
    logging on
     use module io.picolabs.pico alias wrangler
    provides trips, long_trips, short_trips
    shares trips
  }
  
  global {
   
    myself = function()
    {
      wrangler:myself();
    }

    long_trip = 1000 
    trips = function() {
      ent:trips
    } 
    long_trips = function() {
      ent:long_trips
    }
    short_trips = function() {
      trips = ent:trips;
      shor = {};
      trips.map(function(k,v) {
         if (v < long_trip{"Mileage"}) {shor.put(k,v)}
      });
      shor
    }
  }
  
 rule collect_trips {
  select when explicit trip_processed mileage re#(.*)# setting(m);
  pre {
    trps = ent:trips.defaultsTo({});
    m = event:attr("mileage").klog(m);
  }
  fired {
        trps = trps.put(time:now(),{"Mileage":m}).klog(trps.encode());
        ent:trips := trps
      }
  }

 rule collect_long_trips {
    select when explicit found_long_trip mileage re#(.*)# setting(m);
    pre{
     lt = ent:long_trips.defaultsTo({});
    }
    always {
        lt = lt.put(time:now(),{"Mileage":m});
        ent:long_trips := lt
      }
  }

  rule build_report {
     select when car build_report
      event:send({"eci":event:attr("parent").klog(event:attr("parent")),"domain":"fleet", "type":"collect_report",
      "attrs" : {"node": myself(){"eci"},"trips" : trips().encode()}
      })
      
  }
  
  rule clear_trips {
    select when car trip_reset;
    always {
        ent:trips := {};
        ent:long_trips := {}
      }
  }
  
 }
